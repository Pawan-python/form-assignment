{"ast":null,"code":"var _jsxFileName = \"/home/pawan/reactProjects/form-assignment/src/components/map.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport InfoWindowEx from './infoWindowEx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst uuidv1 = require('uuid/v1');\n\nexport class Maps extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      loc_x: 0,\n      loc_y: 0,\n      locRendered: false,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      redirect: false,\n      redirectId: 0\n    };\n\n    this.getUserLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      }\n    };\n\n    this.showPosition = position => {\n      this.setState({\n        loc_x: position.coords.latitude,\n        loc_y: position.coords.longitude,\n        locRendered: true\n      });\n    };\n\n    this.fetchRequestLocations = () => {\n      fetch(`https://neighborapp-backend.herokuapp.com/requests/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-User-Email': localStorage.getItem('email'),\n          'X-User-Token': localStorage.getItem('token')\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          data: data.data\n        });\n        setTimeout(() => {\n          this.fetchRequestLocations();\n        }, 20000);\n      });\n    };\n\n    this.saveCoords = (mapProps, map, clickEven) => {\n      if (window.location.pathname === '/c/request') {\n        this.props.saveMapCoords(clickEven.latLng.lat(), clickEven.latLng.lng());\n        document.querySelector('.custom-modal').style.visibility = 'visible';\n        document.querySelector('.fader').style.visibility = 'visible';\n      }\n    };\n\n    this.openContribution = id => {\n      document.querySelector('.fader').style.visibility = 'visible';\n      this.setState({\n        redirect: true,\n        redirectId: id,\n        showingInfoWindow: false\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: `/c/contribution/${this.state.redirectId}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.centerMoved = (mapProps, map) => {\n      this.setState({\n        loc_x: map.center.lat(),\n        loc_y: map.center.lng()\n      });\n    };\n\n    this.onMarkerClick = (props, marker) => {\n      this.setState({\n        selectedPlace: props.data,\n        activeMarker: marker,\n        showingInfoWindow: true,\n        redirect: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.getUserLocation();\n  }\n\n  componentDidMount() {\n    this.fetchRequestLocations();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderRedirect(), this.state.locRendered ? /*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google,\n        zoom: 14,\n        styles: this.props.mapStyles,\n        disableDefaultUI: true,\n        onClick: this.saveCoords,\n        onDragend: this.centerMoved,\n        initialCenter: {\n          lat: this.state.loc_x,\n          lng: this.state.loc_y\n        },\n        children: [this.state.data.map(m => {\n          if (m.status === 'open') {\n            if (m.request_type === 'normal') {\n              return /*#__PURE__*/_jsxDEV(Marker, {\n                position: {\n                  lat: m.x,\n                  lng: m.y\n                },\n                title: m.title,\n                data: m,\n                onClick: this.onMarkerClick,\n                icon: {\n                  url: '../../data/welfareroom.png',\n                  anchor: new this.props.google.maps.Point(48, 48),\n                  scaledSize: new this.props.google.maps.Size(48, 48)\n                }\n              }, uuidv1(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Marker, {\n                position: {\n                  lat: m.x,\n                  lng: m.y\n                },\n                title: m.title,\n                data: m,\n                onClick: this.onMarkerClick,\n                icon: {\n                  url: '../../data/tortillas1.png',\n                  anchor: new this.props.google.maps.Point(48, 48),\n                  scaledSize: new this.props.google.maps.Size(48, 48)\n                }\n              }, uuidv1(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this);\n            }\n          }\n        }), /*#__PURE__*/_jsxDEV(InfoWindowEx, {\n          marker: this.state.activeMarker,\n          visible: this.state.showingInfoWindow,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: this.state.selectedPlace.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.state.selectedPlace.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.openContribution(this.state.selectedPlace.id),\n              children: \"Read more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nMaps.defaultProps = {\n  mapStyles: [{\n    elementType: 'geometry',\n    stylers: [{\n      color: '#242f3e'\n    }]\n  }, {\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#746855'\n    }]\n  }, {\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: '#242f3e'\n    }]\n  }, {\n    featureType: 'administrative.land_parcel',\n    elementType: 'labels',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative.locality',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#d59563'\n    }]\n  }, {\n    featureType: 'poi',\n    elementType: 'labels.text',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'poi',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#d59563'\n    }]\n  }, {\n    featureType: 'poi.business',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'poi.park',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#263c3f'\n    }]\n  }, {\n    featureType: 'poi.park',\n    elementType: 'labels.text',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'poi.park',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#6b9a76'\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#38414e'\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#212a37'\n    }]\n  }, {\n    featureType: 'road',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#9ca5b3'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#746855'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#1f2835'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#f3d19c'\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#2f3948'\n    }]\n  }, {\n    featureType: 'transit.station',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#d59563'\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#17263c'\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#515c6d'\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: '#17263c'\n    }]\n  }]\n};\n\nfunction mapStateToProps(state) {\n  return {\n    x: state.x,\n    y: state.y\n  };\n}\n\nexport default connect(mapStateToProps, {\n  saveMapCoords\n})(GoogleApiWrapper({\n  apiKey: 'AIzaSyCw1Cu5QmZqsFLWq-D7m12E3Qqjjj13xWY'\n})(Maps));","map":{"version":3,"sources":["/home/pawan/reactProjects/form-assignment/src/components/map.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","connect","Redirect","Button","InfoWindowEx","uuidv1","require","Maps","state","data","loc_x","loc_y","locRendered","showingInfoWindow","activeMarker","selectedPlace","redirect","redirectId","getUserLocation","navigator","geolocation","getCurrentPosition","showPosition","position","setState","coords","latitude","longitude","fetchRequestLocations","fetch","method","headers","localStorage","getItem","then","res","json","setTimeout","saveCoords","mapProps","map","clickEven","window","location","pathname","props","saveMapCoords","latLng","lat","lng","document","querySelector","style","visibility","openContribution","id","renderRedirect","centerMoved","center","onMarkerClick","marker","componentWillMount","componentDidMount","render","google","mapStyles","m","status","request_type","x","y","title","url","anchor","maps","Point","scaledSize","Size","description","defaultProps","elementType","stylers","color","featureType","mapStateToProps","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport { connect } from 'react-redux'\n\nimport { Redirect } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\nimport InfoWindowEx from './infoWindowEx'\n\n\nconst uuidv1 = require('uuid/v1')\n\nexport class Maps extends Component {\n    state = {\n        data: [],\n        loc_x: 0,\n        loc_y: 0,\n        locRendered: false,\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        redirect: false,\n        redirectId: 0\n    }\n\n    getUserLocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition)\n        }\n    }\n\n    showPosition = position => {\n        this.setState({\n            loc_x: position.coords.latitude,\n            loc_y: position.coords.longitude,\n            locRendered: true\n        })\n    }\n\n    fetchRequestLocations = () => {\n        fetch(`https://neighborapp-backend.herokuapp.com/requests/`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-User-Email': localStorage.getItem('email'),\n                'X-User-Token': localStorage.getItem('token')\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                this.setState({ data: data.data })\n                setTimeout(() => {\n                    this.fetchRequestLocations()\n                }, 20000)\n            })\n    }\n\n    saveCoords = (mapProps, map, clickEven) => {\n        if (window.location.pathname === '/c/request') {\n            this.props.saveMapCoords(clickEven.latLng.lat(), clickEven.latLng.lng())\n            document.querySelector('.custom-modal').style.visibility = 'visible'\n            document.querySelector('.fader').style.visibility = 'visible'\n        }\n    }\n\n    openContribution = id => {\n        document.querySelector('.fader').style.visibility = 'visible'\n        this.setState({\n            redirect: true,\n            redirectId: id,\n            showingInfoWindow: false\n        })\n    }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to={`/c/contribution/${this.state.redirectId}`} />\n        }\n    }\n\n    centerMoved = (mapProps, map) => {\n        this.setState({\n            loc_x: map.center.lat(),\n            loc_y: map.center.lng()\n        })\n    }\n\n    componentWillMount() {\n        this.getUserLocation()\n    }\n\n    componentDidMount() {\n        this.fetchRequestLocations()\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n                {this.state.locRendered ? (\n                    <Map\n                        google={this.props.google}\n                        zoom={14}\n                        styles={this.props.mapStyles}\n                        disableDefaultUI={true}\n                        onClick={this.saveCoords}\n                        onDragend={this.centerMoved}\n                        initialCenter={{\n                            lat: this.state.loc_x,\n                            lng: this.state.loc_y\n                        }}\n                    >\n                        {this.state.data.map(m => {\n                            if (m.status === 'open') {\n                                if (m.request_type === 'normal') {\n                                    return (\n                                        <Marker\n                                            key={uuidv1()}\n                                            position={{ lat: m.x, lng: m.y }}\n                                            title={m.title}\n                                            data={m}\n                                            onClick={this.onMarkerClick}\n                                            icon={{\n                                                url: '../../data/welfareroom.png',\n                                                anchor: new this.props.google.maps.Point(48, 48),\n                                                scaledSize: new this.props.google.maps.Size(48, 48)\n                                            }}\n                                        />\n                                    )\n                                } else {\n                                    return (\n                                        <Marker\n                                            key={uuidv1()}\n                                            position={{ lat: m.x, lng: m.y }}\n                                            title={m.title}\n                                            data={m}\n                                            onClick={this.onMarkerClick}\n                                            icon={{\n                                                url: '../../data/tortillas1.png',\n                                                anchor: new this.props.google.maps.Point(48, 48),\n                                                scaledSize: new this.props.google.maps.Size(48, 48)\n                                            }}\n                                        />\n                                    )\n                                }\n                            }\n                        })}\n                        <InfoWindowEx marker={this.state.activeMarker} visible={this.state.showingInfoWindow}>\n                            <div>\n                                <h1>{this.state.selectedPlace.title}</h1>\n                                <div>{this.state.selectedPlace.description}</div>\n                                <br />\n                                <Button onClick={() => this.openContribution(this.state.selectedPlace.id)}>\n                                    Read more\n                                </Button>\n                            </div>\n                        </InfoWindowEx>\n                    </Map>\n                ) : null}\n            </div>\n        )\n    }\n\n    onMarkerClick = (props, marker) => {\n        this.setState({\n            selectedPlace: props.data,\n            activeMarker: marker,\n            showingInfoWindow: true,\n            redirect: false\n        })\n    }\n}\n\nMaps.defaultProps = {\n    mapStyles: [\n        {\n            elementType: 'geometry',\n            stylers: [\n                {\n                    color: '#242f3e'\n                }\n            ]\n        },\n        {\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#746855'\n                }\n            ]\n        },\n        {\n            elementType: 'labels.text.stroke',\n            stylers: [\n                {\n                    color: '#242f3e'\n                }\n            ]\n        },\n        {\n            featureType: 'administrative.land_parcel',\n            elementType: 'labels',\n            stylers: [\n                {\n                    visibility: 'off'\n                }\n            ]\n        },\n        {\n            featureType: 'administrative.locality',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#d59563'\n                }\n            ]\n        },\n        {\n            featureType: 'poi',\n            elementType: 'labels.text',\n            stylers: [\n                {\n                    visibility: 'off'\n                }\n            ]\n        },\n        {\n            featureType: 'poi',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#d59563'\n                }\n            ]\n        },\n        {\n            featureType: 'poi.business',\n            stylers: [\n                {\n                    visibility: 'off'\n                }\n            ]\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'geometry',\n            stylers: [\n                {\n                    color: '#263c3f'\n                }\n            ]\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'labels.text',\n            stylers: [\n                {\n                    visibility: 'off'\n                }\n            ]\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#6b9a76'\n                }\n            ]\n        },\n        {\n            featureType: 'road',\n            elementType: 'geometry',\n            stylers: [\n                {\n                    color: '#38414e'\n                }\n            ]\n        },\n        {\n            featureType: 'road',\n            elementType: 'geometry.stroke',\n            stylers: [\n                {\n                    color: '#212a37'\n                }\n            ]\n        },\n        {\n            featureType: 'road',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#9ca5b3'\n                }\n            ]\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry',\n            stylers: [\n                {\n                    color: '#746855'\n                }\n            ]\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [\n                {\n                    color: '#1f2835'\n                }\n            ]\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#f3d19c'\n                }\n            ]\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'labels',\n            stylers: [\n                {\n                    visibility: 'off'\n                }\n            ]\n        },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [\n                {\n                    color: '#2f3948'\n                }\n            ]\n        },\n        {\n            featureType: 'transit.station',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#d59563'\n                }\n            ]\n        },\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [\n                {\n                    color: '#17263c'\n                }\n            ]\n        },\n        {\n            featureType: 'water',\n            elementType: 'labels.text.fill',\n            stylers: [\n                {\n                    color: '#515c6d'\n                }\n            ]\n        },\n        {\n            featureType: 'water',\n            elementType: 'labels.text.stroke',\n            stylers: [\n                {\n                    color: '#17263c'\n                }\n            ]\n        }\n    ]\n}\n\nfunction mapStateToProps(state) {\n    return {\n        x: state.x,\n        y: state.y\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { saveMapCoords }\n)(\n    GoogleApiWrapper({\n        apiKey: 'AIzaSyCw1Cu5QmZqsFLWq-D7m12E3Qqjjj13xWY'\n    })(Maps)\n)\n"]},"metadata":{},"sourceType":"module"}